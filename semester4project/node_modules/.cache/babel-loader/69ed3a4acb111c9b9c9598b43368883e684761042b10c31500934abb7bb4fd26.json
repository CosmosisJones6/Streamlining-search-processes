{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_Tree = _resolveComponent(\"Tree\", true);\n  return _openBlock(), _createElementBlock(_Fragment, null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.searchText = $event),\n    type: \"text\",\n    class: \"shortinput\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.searchText]]), _createVNode(_component_Tree, {\n    nodes: _ctx.data,\n    \"search-text\": _ctx.searchText,\n    \"use-checkbox\": false,\n    \"use-icon\": false,\n    \"show-child-count\": \"\",\n    onNodeExpanded: _ctx.onNodeExpanded,\n    \"onUpdate:nodes\": _ctx.onUpdate,\n    onNodeClick: _ctx.onNodeClick\n  }, null, 8 /* PROPS */, [\"nodes\", \"search-text\", \"onNodeExpanded\", \"onUpdate:nodes\", \"onNodeClick\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_ctx","searchText","$event","type","class","_createVNode","_component_Tree","nodes","data","onNodeExpanded","onUpdate","onNodeClick"],"sources":["/Users/gaborkiss/Documents/GitHub/semester4project/semester4project/src/components/tree.vue"],"sourcesContent":["<template>\n    <input v-model=\"searchText\" type=\"text\" class=\"shortinput\"/>\n    <Tree\n      :nodes=\"data\"\n      :search-text=\"searchText\"\n      :use-checkbox=\"false\"\n      :use-icon=\"false\"\n      show-child-count\n      @nodeExpanded=\"onNodeExpanded\"\n      @update:nodes=\"onUpdate\"\n      @nodeClick=\"onNodeClick\"\n    />\n  </template>\n  \n  <script lang=\"js\">\n  import { ref } from \"vue\";\n  import Tree from \"vue3-tree\";\n  import \"vue3-tree/dist/style.css\";\n  \n  export default {\n    components: {\n      Tree,\n    },\n    setup() {\n      const data = ref([\n        {\n          id: 1,\n          label: \"Animal\",\n          nodes: [\n            {\n              id: 2,\n              label: \"Dog\",\n            },\n            {\n              id: 3,\n              label: \"Cat\",\n              nodes: [\n                {\n                  id: 4,\n                  label: \"Egyptian Mau Cat\",\n                },\n                {\n                  id: 5,\n                  label: \"Japanese Bobtail Cat\",\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: 6,\n          label: \"People\",\n        },\n      ]);\n      const searchText = ref(\"\");\n      const onNodeExpanded = (node, state) => {\n        console.log(\"state: \", state);\n        console.log(\"node: \", node);\n      };\n  \n      const onUpdate = (nodes) => {\n        console.log(\"nodes:\", nodes);\n      };\n  \n      const onNodeClick = (node) => {\n        console.log(node);\n      };\n  \n      return {\n        data,\n        searchText,\n        onNodeExpanded,\n        onUpdate,\n        onNodeClick,\n      };\n    },\n  };\n  </script>"],"mappings":";;;6EACIA,mBAAA,CAA4D;+DAA5CC,IAAA,CAAAC,UAAU,GAAAC,MAAA;IAAEC,IAAI,EAAC,MAAM;IAACC,KAAK,EAAC;iDAA9BJ,IAAA,CAAAC,UAAU,E,GAC1BI,YAAA,CASEC,eAAA;IARCC,KAAK,EAAEP,IAAA,CAAAQ,IAAI;IACX,aAAW,EAAER,IAAA,CAAAC,UAAU;IACvB,cAAY,EAAE,KAAK;IACnB,UAAQ,EAAE,KAAK;IAChB,kBAAgB,EAAhB,EAAgB;IACfQ,cAAY,EAAET,IAAA,CAAAS,cAAc;IAC5B,gBAAY,EAAET,IAAA,CAAAU,QAAQ;IACtBC,WAAS,EAAEX,IAAA,CAAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}